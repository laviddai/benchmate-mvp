"""Add dataset table and project_datasets relationship

Revision ID: 7a4e59542899
Revises: 00cd88da8a4f
Create Date: 2025-05-22 16:26:56.627900

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a4e59542899'
down_revision: Union[str, None] = '00cd88da8a4f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_name', sa.String(length=512), nullable=False),
    sa.Column('file_path_s3', sa.String(length=1024), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('technique_type', sa.String(length=100), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('uploaded_by_user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_datasets_project_id_projects')),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], name=op.f('fk_datasets_uploaded_by_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_datasets')),
    sa.UniqueConstraint('file_path_s3', name=op.f('uq_datasets_file_path_s3'))
    )
    with op.batch_alter_table('datasets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_datasets_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_datasets_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_datasets_project_id'), ['project_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_datasets_technique_type'), ['technique_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_datasets_uploaded_by_user_id'), ['uploaded_by_user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('datasets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_datasets_uploaded_by_user_id'))
        batch_op.drop_index(batch_op.f('ix_datasets_technique_type'))
        batch_op.drop_index(batch_op.f('ix_datasets_project_id'))
        batch_op.drop_index(batch_op.f('ix_datasets_name'))
        batch_op.drop_index(batch_op.f('ix_datasets_id'))

    op.drop_table('datasets')
    # ### end Alembic commands ###
