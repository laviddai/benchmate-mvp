###############################################################################
#  BenchMate – Local development stack
#
#  Start with:   docker compose up --build
#
#  Services
#  --------
#  • backend:  FastAPI application
#  • frontend: React application
#  • postgres: PostgreSQL database service
#  • redis:    for Celery job queue (async tasks)
#  • minio:    S3-compatible object storage for files
###############################################################################

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: benchmate_backend
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy # Changed to service_healthy if redis has a healthcheck
      minio: # <<< NEW DEPENDENCY
        condition: service_healthy # <<< NEW DEPENDENCY
    command:
      - uvicorn
      - main:app
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
      - --reload

  frontend:
    image: node:18-alpine
    container_name: benchmate_frontend
    working_dir: /usr/src/app
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend/benchtop:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"

  postgres:
    image: postgres:15-alpine
    container_name: benchmate_postgres
    environment:
      POSTGRES_USER: benchmate_user
      POSTGRES_PASSWORD: supersecretpassword
      POSTGRES_DB: benchmate_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U benchmate_user -d benchmate_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: benchmate_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- NEW MINIO SERVICE ---
  minio:
    image: minio/minio:RELEASE.2023-09-04T19-57-37Z # Use a specific, recent release
    container_name: benchmate_minio
    environment:
      # These are the default credentials for MinIO's root user
      # CHANGE THESE FOR ANY REAL DEPLOYMENT and manage securely
      MINIO_ROOT_USER: benchmateadmin # Min 3 chars
      MINIO_ROOT_PASSWORD: supersecretminiopassword # Min 8 chars
      # MINIO_DEFAULT_BUCKETS: "benchmate-datasets,benchmate-results" # Optional: auto-create buckets
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console/UI port
    volumes:
      - minio_data:/data # Persist MinIO data
    command: server /data --console-address ":9001" # Start server and point to data dir, enable console
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
  # --- END NEW MINIO SERVICE ---

volumes:
  postgres_data:
  minio_data: # <<< NEW NAMED VOLUME FOR MINIO